<project name="Deploy Ikube Cluster" default="go">

	<property file="build.properties" />
	<property file="local-build.properties" />

	<!-- The default profile to deploy. -->
	<property name="profile" value="production" />
	<property name="user-dir" value="${user.dir}" />
	<property name="user-home" value="${user.home}" />

	<target name="go">
		<antcall target="prepare" />
		<antcall target="stop-servers" />
		<antcall target="clean-servers" />
		<antcall target="deploy-configuration" />
		<antcall target="deploy-ikube" />
		<antcall target="chmod-servers" />
		<antcall target="start-servers" />
	</target>

	<target name="prepare">
		<antcall target="package-configuration" />
		<antcall target="jar-configuration" />
		<antcall target="deploy-configuration-for-jetty" />
		<!-- Zip Tomcat and the configuration directory for upload to Google Code -->
		<echo message="Zipping Tomcat with configuration : " />
		<antcall target="zip-tomcat" />
	</target>

	<target name="stop-servers">
		<antcall target="execute-remote-command">
			<param name="command" value="killall java" />
		</antcall>
	</target>

	<target name="clean-servers">
		<antcall target="execute-remote-command">
			<param name="command" value="
				rm -r /usr/share/apache-tomcat-7.0.27/bin/ikube;
				rm -r /usr/share/apache-tomcat-7.0.27/webapps/ikube*;
				rm -r /usr/share/apache-tomcat-7.0.27/logs;
				mkdir -p /usr/share/apache-tomcat-7.0.27/bin/ikube;
				mkdir -p /usr/share/apache-tomcat-7.0.27/logs;
				
				rm -r /usr/share/apache-tomcat-6.0.29-2/webapps/ikube*;
				rm -r /usr/share/apache-tomcat-6.0.29-1/logs;
				mkdir -p /usr/share/apache-tomcat-6.0.29-1/logs;
						  
				rm -r /usr/share/apache-tomcat-6.0.29-2/bin/ikube;
				rm -r /usr/share/apache-tomcat-6.0.29-2/webapps/ikube*;
				rm -r /usr/share/apache-tomcat-6.0.29-2/logs;
				mkdir -p /usr/share/apache-tomcat-6.0.29-2/bin/ikube;
				mkdir -p /usr/share/apache-tomcat-6.0.29-2/logs;
						  
				rm -r /usr/share/apache-tomcat-6.0.29-3/bin/ikube;
				rm -r /usr/share/apache-tomcat-6.0.29-3/webapps/ikube*;
				rm -r /usr/share/apache-tomcat-6.0.29-3/logs;
				mkdir -p /usr/share/apache-tomcat-6.0.29-3/bin/ikube;
				mkdir -p /usr/share/apache-tomcat-6.0.29-3/logs;" />
		</antcall>
	</target>

	<!-- This target will deploy the configuration to the servers. -->
	<target name="deploy-configuration">
		<echo>User dir: ${user-dir}</echo>
		<echo>User home: ${user-home}</echo>
		<copy file="${output-configuration-directory}/${ikube-configuration-jar}" todir="code/core/src/main/webapp/docs" failonerror="true" />
		<!-- Deploy configuration on server -->
		<antcall target="copy-directory-to-server">
			<param name="directory-to-copy" value="${output-configuration-directory}" />
			<param name="server-directory" value="/usr/share/apache-tomcat-7.0.27/bin/ikube" />
		</antcall>
		<!-- antcall target="copy-directory-to-server">
			<param name="directory-to-copy" value="${output-configuration-directory}" />
			<param name="server-directory" value="/usr/share/apache-tomcat-6.0.29-1/bin/ikube" />
		</antcall>
		<antcall target="copy-directory-to-server">
			<param name="directory-to-copy" value="${output-configuration-directory}" />
			<param name="server-directory" value="/usr/share/apache-tomcat-6.0.29-2/bin/ikube" />
		</antcall>
		<antcall target="copy-directory-to-server">
			<param name="directory-to-copy" value="${output-configuration-directory}" />
			<param name="server-directory" value="/usr/share/apache-tomcat-6.0.29-3/bin/ikube" />
		</antcall -->
	</target>

	<!-- Deploys the war to all the servers. -->
	<target name="deploy-ikube">
		<!-- Deploy to the server -->
		<antcall target="copy-to-server">
			<param name="server-directory" value="${userid}:${password}@${host-server}:/usr/share/apache-tomcat-7.0.27/webapps" />
		</antcall>
		<antcall target="copy-to-server">
			<param name="server-directory" value="${userid}:${password}@${host-server}:/usr/share/apache-tomcat-6.0.29-1/webapps" />
		</antcall>
		<!-- antcall target="copy-to-server">
			<param name="server-directory" value="${userid}:${password}@${host-server}:/usr/share/apache-tomcat-6.0.29-2/webapps" />
		</antcall>
		<antcall target="copy-to-server">
			<param name="server-directory" value="${userid}:${password}@${host-server}:/usr/share/apache-tomcat-6.0.29-3/webapps" />
		</antcall -->
	</target>

	<target name="chmod-servers">
		<antcall target="execute-remote-command">
			<param name="command" value="
					chmod 777 -R /usr/share/apache-tomcat-7.0.27;
					chmod 777 -R /usr/share/apache-tomcat-6.0.29-1;
					chmod 777 -R /usr/share/apache-tomcat-6.0.29-2;
					chmod 777 -R /usr/share/apache-tomcat-6.0.29-3;" />
		</antcall>
	</target>

	<!-- cd /usr/share/apache-tomcat-6.0.29-1/bin; ./startup.sh; -->
	<target name="start-servers">
		<antcall target="execute-remote-command">
			<param name="command" value="
				cd /usr/share/apache-tomcat-7.0.27/bin; ./startup.sh;
				cd /usr/share/apache-tomcat-6.0.29-1/bin; ./startup.sh;" />
		</antcall>
	</target>

	<!-- 
		This target will unpack Tomcat, put the war in the web apps directory, unpack the configuration to the 
		bin directory, then zip everything up again into a zip for distribution/deployment.
	-->
	<target name="zip-tomcat">
		<unzip dest="${target-directory}" src="code/libs/tools/${tomcat-zip}" />
		<unjar src="${output-configuration-directory}/${ikube-configuration-jar}" dest="${target-directory}/${tomcat-unpacked}/bin/ikube" overwrite="true" />
		<zip destfile="${target-directory}/${tomcat-zip}" compress="true" filesonly="false" update="false" whenempty="skip">
			<zipfileset dir="${target-directory}/${tomcat-unpacked}" prefix="${tomcat-unpacked}" />
		</zip>
	</target>

	<target name="copy-to-server">
		<scp file="${target-directory}/${ikube-war}" todir="${server-directory}" trust="true" failonerror="false" />
	</target>

	<target name="execute-remote-command">
		<sshexec host="${host-server}" trust="true" username="${userid}" password="${password}" command="${command}" failonerror="false" />
	</target>

	<!-- 
		This target will copy the common, the production and the profile configuration to the 
		specified output directory. The profile must be the name of the configuration directory 
		in the conf folder int he core resources folder.  
	-->
	<target name="package-configuration">
		<delete dir="${output-configuration-directory}" />
		<!-- Copy the common configuration -->
		<copy file="code/core/src/main/resources/ikube/spring.xml" todir="${output-configuration-directory}" failonerror="false" />
		<copy todir="${output-configuration-directory}/common" failonerror="false">
			<fileset dir="code/core/src/main/resources/ikube/common" />
		</copy>
		<!-- Copy the production configuration, with the geo name stuff -->
		<copy todir="${output-configuration-directory}/production" failonerror="false">
			<fileset dir="code/core/src/main/resources/ikube/production" />
		</copy>
		<!-- Copy the profile configuration -->
		<copy todir="${output-configuration-directory}/${profile}" failonerror="false">
			<fileset dir="code/core/src/main/resources/ikube/${profile}" />
		</copy>
	</target>
	<target name="jar-configuration">
		<jar destfile="${output-configuration-directory}/${ikube-configuration-jar}" basedir="${output-configuration-directory}" />
	</target>
	<target name="deploy-configuration-for-jetty">
		<unjar src="${output-configuration-directory}/${ikube-configuration-jar}" dest="code/core/ikube" overwrite="true" />
		<unjar src="${output-configuration-directory}/${ikube-configuration-jar}" dest="code/war/ikube" overwrite="true" />
	</target>

	<target name="copy-directory-to-server">
		<scp todir="${userid}:${password}@${host-server}:${server-directory}" trust="true" failonerror="false">
			<fileset dir="${directory-to-copy}" />
		</scp>
	</target>

</project>