<?xml version="1.0" encoding="UTF-8"?>

<beans
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:property="http://www.springframework.org/schema/p"
    xmlns:transaction="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"

    xsi:schemaLocation="
			http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <description>
        This file is not to be modified by users generally.
        This is the configuration for the beans used by Ikube. It contains the entity manager for Jpa,
        the handlers for the data sources and the schedulers for the timing of jobs.
    </description>

    <context:spring-configured/>
    <context:annotation-config/>
    <context:component-scan base-package="ikube"/>
    <transaction:annotation-driven transaction-manager="transactionManager"/>

    <bean
        name="ikube.toolkit.ApplicationContextManager"
        class="ikube.toolkit.ApplicationContextManager"
        depends-on="ikube.database.IDataBase"/>

    <!--
        The default persistence manager so we can specify more than one persistence file, and
        also we can hide the persistence xml file from the application servers so they don't try to
        inject the persistence resources into the classes.
    -->
    <bean
        name="defaultPersistenceUnitManager"
        class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager"
        property:persistenceXmlLocations-ref="persistenceXmlLocations"
        property:defaultDataSource-ref="${ikube.dataSource}"/>
    <util:list id="persistenceXmlLocations">
        <value>classpath*:META-INF/persistence/persistence.xml</value>
    </util:list>

    <!-- This bean does the injection of the entity manager into the dao. -->
    <bean
        class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    <bean
        name="transactionManager"
        class="org.springframework.orm.jpa.JpaTransactionManager"
        property:entityManagerFactory-ref="entityManagerFactory"/>
    <bean
        name="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        lazy-init="false"
        property:jpaVendorAdapter-ref="jpaAdapter"
        property:jpaPropertyMap-ref="jpaPropertyMap"
        property:dataSource-ref="${ikube.dataSource}"
        property:persistenceUnitName="${ikube.persistenceUnit}"
        property:persistenceUnitManager-ref="defaultPersistenceUnitManager"
        property:loadTimeWeaver-ref="loadTimeWeaver"/>
    <bean
        name="loadTimeWeaver"
        class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
    <bean
        name="jpaAdapter"
        class="org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter"
        property:database="${ikube.dataSourceType}"
        property:showSql="false"/>
    <util:map id="jpaPropertyMap">
        <!-- <entry key="openjpa.ConnectionFactoryProperties" value="PrettyPrint=true,PrettyPrintLineLength=150" /> -->
        <entry key="openjpa.Log"
               value="DefaultLevel=INFO,JDBC=INFO,SQL=INFO,File=ikube/openjpa.log,Runtime=INFO,Tool=INFO"/>

        <entry key="openjpa.DataCache" value="true(CacheSize=0,SoftReferenceSize=0)"/>
        <entry key="openjpa.QueryCache" value="true(CacheSize=0,SoftReferenceSize=0)"/>

        <entry key="openjpa.Optimistic" value="true"/>
        <entry key="openjpa.ReadLockLevel" value="none"/>
        <entry key="openjpa.WriteLockLevel" value="write"/>
        <entry key="openjpa.NontransactionalRead" value="true"/>
        <entry key="openjpa.LockTimeout" value="60000"/>

        <!--
            There is a bug somewhere, in OpenJpa or H2 but the 'FOR UPDATE LIMIT ?'
             seems to be rejected by H2, and incidentally for MySql too. Perhaps the others
             accept this syntax.
        -->
        <!-- (VersionCheckOnReadLock=false,VersionUpdateOnWriteLock=false) -->
        <!--<entry key="openjpa.LockManager" value="pessimistic"/>-->

        <entry key="openjpa.Multithreaded" value="true"/>
        <entry key="openjpa.AutoDetach" value="commit"/>
        <entry key="openjpa.FlushBeforeQueries" value="false"/>
        <entry key="openjpa.DynamicEnhancementAgent" value="true"/>
        <entry key="openjpa.RuntimeUnenhancedClasses" value="supported"/>
        <entry key="openjpa.jdbc.DBDictionary" value="${ikube.jdbc.dictionary}"/>

        <entry key="openjpa.Connection2UserName" value="${ikube.jdbc.userid}"/>
        <entry key="openjpa.Connection2Password" value="${ikube.jdbc.password}"/>
        <entry key="openjpa.Connection2URL" value="${ikube.jdbc.url}"/>
        <entry key="openjpa.Connection2DriverName" value="${ikube.jdbc.driver}"/>
        <entry key="openjpa.jdbc.SynchronizeMappings" value="buildSchema(ForeignKeys=true)"/>

        <entry key="openjpa.ConnectionUserName" value="${ikube.jdbc.userid}"/>
        <entry key="openjpa.ConnectionPassword" value="${ikube.jdbc.password}"/>
        <entry key="openjpa.ConnectionURL" value="${ikube.jdbc.url}"/>
        <entry key="openjpa.ConnectionDriverName" value="${ikube.jdbc.driver}"/>
        <entry key="openjpa.jdbc.SynchronizeMappings" value="buildSchema(ForeignKeys=true)"/>
        <entry key="openjpa.jdbc.SchemaFactory" value="native(ForeignKeys=true)"/>
        <entry key="openjpa.InverseManager" value="true(Action=warn)"/>
    </util:map>

    <transaction:advice id="transactionAdvice" transaction-manager="transactionManager">
        <transaction:attributes>
            <transaction:method name="find*"/>
            <transaction:method name="merge*"/>
            <transaction:method name="persist*"/>
            <transaction:method name="remove*"/>
            <transaction:method name="execute*"/>
        </transaction:attributes>
    </transaction:advice>

    <aop:config>
        <aop:pointcut id="dataBaseJpaH2" expression="execution(* ikube.database.DataBaseJpaH2.*(..))"/>
        <aop:pointcut id="dataBaseJpaDb2" expression="execution(* ikube.database.DataBaseJpaDb2.*(..))"/>
        <aop:pointcut id="dataBaseJpaOracle" expression="execution(* ikube.database.DataBaseJpaOracle.*(..))"/>
        <aop:pointcut id="dataBaseJpaPostgres" expression="execution(* ikube.database.DataBaseJpaPostgres.*(..))"/>
        <aop:pointcut id="dataBaseAbstract" expression="execution(* ikube.database.ADataBaseJpa.*(..))"/>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="dataBaseJpaH2"/>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="dataBaseJpaDb2"/>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="dataBaseJpaOracle"/>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="dataBaseJpaPostgres"/>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="dataBaseAbstract"/>
    </aop:config>

    <bean
        name="ikube.database.IDataBase"
        class="${ikube.dataBaseClass}"
        lazy-init="false"
        depends-on="ikube.toolkit.THREAD"/>

    <bean
        name="ikube.toolkit.DataManager"
        class="ikube.toolkit.DataManager"
        lazy-init="false"
        init-method="loadData"
        depends-on="ikube.database.IDataBase"/>

    <bean
        name="ikube.action.index.parse.mime.MimeMapper"
        class="ikube.action.index.parse.mime.MimeMapper">
        <constructor-arg value="mime-mapping.xml"/>
    </bean>
    <bean
        name="ikube.action.index.parse.mime.MimeTypes"
        class="ikube.action.index.parse.mime.MimeTypes">
        <constructor-arg value="mime-types.xml"/>
    </bean>

    <!-- Service layer entities. -->
    <bean
        name="ikube.search.ISearcherService"
        class="ikube.search.SearcherService"/>
    <bean
        name="ikube.cluster.IMonitorService"
        class="ikube.cluster.MonitorService"/>

    <bean
        name="ikube.toolkit.THREAD"
        class="ikube.toolkit.THREAD"
        lazy-init="false"
        init-method="initialize"
        destroy-method="destroy"/>

    <!-- This will initialize all the analyzers and build them in parallel. -->
    <bean
        name="ikube.analytics.AnalyzerManager"
        class="ikube.analytics.AnalyzerManager"
        depends-on="ikube.toolkit.THREAD"/>

    <bean
        name="ikube.analytics.IAnalyticsService"
        class="ikube.analytics.AnalyticsService" />

    <bean
        id="ikube.scheduling.Scheduler"
        class="ikube.scheduling.Scheduler"
        init-method="initialize"
        destroy-method="shutdown"
        property:schedules-ref="ikube.scheduling.Scheduler.schedules"/>
    <!-- The schedules that fire events to start actions. -->
    <util:list id="ikube.scheduling.Scheduler.schedules">
        <ref bean="ikube.scheduling.schedule.IndexSchedule"/>
        <ref bean="ikube.scheduling.schedule.ServerSchedule"/>
        <ref bean="ikube.scheduling.schedule.IndexSizeSchedule"/>
        <ref bean="ikube.scheduling.schedule.ActionSchedule"/>
        <ref bean="ikube.scheduling.schedule.SnapshotSchedule"/>
        <ref bean="ikube.scheduling.schedule.CpuLoadSchedule"/>
        <ref bean="ikube.scheduling.schedule.IndexCommitSchedule"/>
        <ref bean="ikube.scheduling.schedule.IndexCommitSchedule"/>
        <ref bean="ikube.scheduling.schedule.AnalyzerSchedule"/>
        <ref bean="ikube.scheduling.schedule.PruneSchedule"/>
    </util:list>

    <!-- Scheduled objects. -->
    <bean
        name="ikube.scheduling.schedule.IndexSchedule"
        class="ikube.scheduling.schedule.IndexSchedule"
        property:delay="${delay}"
        property:period="${period}"/>
    <bean
        name="ikube.scheduling.schedule.ServerSchedule"
        class="ikube.scheduling.schedule.ServerSchedule"
        property:delay="10000"
        property:period="60000"/>
    <bean
        name="ikube.scheduling.schedule.IndexSizeSchedule"
        class="ikube.scheduling.schedule.IndexSizeSchedule"
        property:delay="600000"
        property:period="600000"/>
    <bean
        name="ikube.scheduling.schedule.ActionSchedule"
        class="ikube.scheduling.schedule.ActionSchedule"
        property:delay="600000"
        property:period="600000"/>
    <bean
        name="ikube.scheduling.schedule.AnalyzerSchedule"
        class="ikube.scheduling.schedule.AnalyzerSchedule"
        property:single="true"
        property:delay="${analyzer-manager-wait}"
        property:period="${analyzer-manager-wait}"/>
    <bean
        name="ikube.scheduling.schedule.SnapshotSchedule"
        class="ikube.scheduling.schedule.SnapshotSchedule"
        property:delay="60000"
        property:period="60000"/>
    <bean
        name="ikube.scheduling.schedule.CpuLoadSchedule"
        class="ikube.scheduling.schedule.CpuLoadSchedule"
        property:delay="60000"
        property:period="60000"/>
    <bean
        name="ikube.scheduling.schedule.IndexCommitSchedule"
        class="ikube.scheduling.schedule.IndexCommitSchedule"
        property:delay="180000"
        property:period="180000"/>
    <bean
        name="ikube.scheduling.schedule.PruneSchedule"
        class="ikube.scheduling.schedule.PruneSchedule"
        property:delay="60000"
        property:period="60000"/>

    <!--
        This is the mailer that will send mail to targets when things go right, and wrong in fact. This
        you would want to modify, otherwise I will be getting many, many mails from your system.
    -->
    <bean
        name="ikube.toolkit.Mailer"
        class="ikube.toolkit.Mailer"
        property:port="465"
        property:auth="true"
        property:protocol="pop3"
        property:user="ikube.notifications"
        property:password="caherline"
        property:mailHost="smtp.gmail.com"
        property:sender="ikube.notifications@gmail.com"
        property:recipients="ikube.notifications@gmail.com"/>

    <bean
        name="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
        property:basenames-ref="messageProperties">
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <util:list id="messageProperties">
        <value>/WEB-INF/i18n/i18n</value>
    </util:list>

    <bean
        name="ikube.search.spelling.SpellingChecker"
        class="ikube.search.spelling.SpellingChecker"
        destroy-method="destroy"/>

    <!-- The handlers that do the indexing logic. -->
    <bean
        name="ikube.action.index.handler.IndexableHandler"
        class="ikube.action.index.handler.IndexableHandler"
        abstract="true"/>
    <bean
        name="ikube.action.index.handler.internet.IndexableInternetHandler"
        class="ikube.action.index.handler.internet.IndexableInternetHandler"
        parent="ikube.action.index.handler.IndexableHandler"
        property:indexableClass="ikube.model.IndexableInternet"/>
    <bean
        name="ikube.action.index.handler.email.IndexableEmailHandler"
        class="ikube.action.index.handler.email.IndexableEmailHandler"
        parent="ikube.action.index.handler.IndexableHandler"
        property:indexableClass="ikube.model.IndexableEmail"/>
    <bean
        name="ikube.action.index.handler.filesystem.IndexableFileSystemHandler"
        class="ikube.action.index.handler.filesystem.IndexableFileSystemHandler"
        parent="ikube.action.index.handler.IndexableHandler"
        property:indexableClass="ikube.model.IndexableFileSystem"/>
    <bean
        name="ikube.action.index.handler.database.DeltaIndexableTableHandler"
        class="ikube.action.index.handler.database.DeltaIndexableTableHandler"
        parent="ikube.action.index.handler.IndexableHandler"
        property:indexableClass="ikube.model.IndexableTable"/>
    <bean
        name="ikube.action.index.handler.filesystem.IndexableFilesystemLogHandler"
        class="ikube.action.index.handler.filesystem.IndexableFilesystemLogHandler"
        parent="ikube.action.index.handler.IndexableHandler"
        property:indexableClass="ikube.model.IndexableFileSystemLog"/>
    <bean
        name="ikube.action.index.handler.database.IndexableDataSourceHandler"
        class="ikube.action.index.handler.database.IndexableDataSourceHandler"
        parent="ikube.action.index.handler.IndexableHandler"
        property:indexableClass="ikube.model.IndexableDataSource"/>
    <bean
        name="ikube.action.index.handler.filesystem.IndexableFilesystemCsvHandler"
        class="ikube.action.index.handler.filesystem.IndexableFilesystemCsvHandler"
        parent="ikube.action.index.handler.IndexableHandler"
        property:indexableClass="ikube.model.IndexableFileSystemCsv"/>
    <bean
        name="ikube.action.index.handler.internet.TwitterHandler"
        class="ikube.action.index.handler.internet.TwitterHandler"
        parent="ikube.action.index.handler.IndexableHandler"
        property:indexableClass="ikube.model.IndexableTweets"/>
    <bean
        name="ikube.action.index.handler.internet.SvnHandler"
        class="ikube.action.index.handler.internet.SvnHandler"
        parent="ikube.action.index.handler.IndexableHandler"
        property:indexableClass="ikube.model.IndexableSvn"/>
    <bean
        name="ikube.action.index.handler.internet.ExchangeHandler"
        class="ikube.action.index.handler.internet.ExchangeHandler"
        parent="ikube.action.index.handler.IndexableHandler"
        property:indexableClass="ikube.model.IndexableExchange"/>

    <util:list id="indexable-handlers">
        <ref bean="ikube.action.index.handler.internet.IndexableInternetHandler"/>
        <ref bean="ikube.action.index.handler.email.IndexableEmailHandler"/>
        <ref bean="ikube.action.index.handler.filesystem.IndexableFileSystemHandler"/>
        <ref bean="ikube.action.index.handler.database.DeltaIndexableTableHandler"/>
        <ref bean="ikube.action.index.handler.filesystem.IndexableFilesystemLogHandler"/>
        <ref bean="ikube.action.index.handler.database.IndexableDataSourceHandler"/>
        <ref bean="ikube.action.index.handler.filesystem.IndexableFilesystemCsvHandler"/>
        <ref bean="ikube.action.index.handler.internet.TwitterHandler"/>
        <ref bean="ikube.action.index.handler.internet.SvnHandler"/>
        <ref bean="ikube.action.index.handler.internet.ExchangeHandler"/>
    </util:list>

    <bean
        name="ikube.action.index.handler.ResourceHandler"
        class="ikube.action.index.handler.ResourceHandler"/>
    <bean
        name="ikube.action.index.handler.filesystem.FileResourceHandler"
        class="ikube.action.index.handler.filesystem.FileResourceHandler"/>
    <bean
        name="ikube.action.index.handler.filesystem.RowResourceHandler"
        class="ikube.action.index.handler.filesystem.RowResourceHandler"/>
    <bean
        name="ikube.action.index.handler.internet.InternetResourceHandler"
        class="ikube.action.index.handler.internet.InternetResourceHandler"/>
    <bean
        name="ikube.action.index.handler.internet.TwitterResourceHandler"
        class="ikube.action.index.handler.internet.TwitterResourceHandler"
        depends-on="ikube.database.IDataBase"
        init-method="init"/>
    <bean
        name="ikube.action.index.handler.internet.SvnResourceHandler"
        class="ikube.action.index.handler.internet.SvnResourceHandler"/>
    <bean
        name="ikube.action.index.handler.internet.ExchangeResourceHandler"
        class="ikube.action.index.handler.internet.ExchangeResourceHandler"/>
    <bean
        name="ikube.action.index.handler.filesystem.LogFileResourceHandler"
        class="ikube.action.index.handler.filesystem.LogFileResourceHandler"/>

    <bean
        name="ikube.action.index.analyzer.NgramAnalyzer"
        class="ikube.action.index.analyzer.NgramAnalyzer"
        property:minGram="4"
        property:maxGram="21"/>

    <bean
        name="ikube.action.index.analyzer.EdgeNgramAnalyzer"
        class="ikube.action.index.analyzer.EdgeNgramAnalyzer"
        property:minGram="4"
        property:maxGram="21"/>

    <bean
        name="ikube.action.index.analyzer.StemmingAnalyzer"
        class="ikube.action.index.analyzer.StemmingAnalyzer"/>

    <bean
        name="ikube.action.index.handler.strategy.LanguageCleaningStrategy"
        class="ikube.action.index.handler.strategy.LanguageCleaningStrategy"
        init-method="initialize"/>

    <bean
        name="ikube.action.index.handler.strategy.LanguageDetectionStrategy"
        class="ikube.action.index.handler.strategy.LanguageDetectionStrategy"
        init-method="initialize"/>

    <bean
        name="ikube.action.index.handler.strategy.GeospatialEnrichmentStrategy"
        class="ikube.action.index.handler.strategy.GeospatialEnrichmentStrategy"
        init-method="initialize"
        depends-on="ikube.toolkit.DataManager"
        lazy-init="true"/>

    <bean
        name="ikube.action.index.handler.strategy.EmoticonClassificationStrategy"
        class="ikube.action.index.handler.strategy.EmoticonClassificationStrategy"
        init-method="initialize"/>

    <bean
        name="ikube.action.index.handler.strategy.ContentTypeStrategy"
        class="ikube.action.index.handler.strategy.ContentTypeStrategy"
        init-method="initialize"/>

    <bean
        name="ikube.action.index.handler.strategy.LanguageFilterStrategy"
        class="ikube.action.index.handler.strategy.LanguageFilterStrategy"
        init-method="initialize"/>

    <!--
		This bean is the geocoder, it will enrich the data with spatial co-ordinates if
		the indexables contain address fields. The Url for this service
	-->
    <bean
        name="ikube.action.index.handler.strategy.geocode.Geocoder"
        class="ikube.action.index.handler.strategy.geocode.Geocoder"
        property:searchField="name"
        property:userid="user"
        property:password="user"
        property:searchUrl="${searcher.web.service.url}"/>

    <bean class="ikube.security.ProxyAuthenticator" init-method="initialize"/>

    <!--<bean-->
        <!--id="ikube.experimental.RaceService"-->
        <!--class="ikube.experimental.RaceService"-->
        <!--depends-on="ikube.database.IDataBase"-->
        <!--property:dataBase-ref="ikube.database.IDataBase" />-->

</beans>
