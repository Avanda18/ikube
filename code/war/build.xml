<project name="Deploy Ikube Cluster" default="start.tomcat.cluster">

	<property file="build.properties" />

	<target name="start.tomcat.cluster">
		<antcall target="executeTomcatAction">
			<param name="action" value="start" />
			<param name="tomcat.bin" value="${tomcat.1.bin}" />
			<param name="tomcat.home" value="${tomcat.1}" />
		</antcall>
		<sleep seconds="${sleep}" />
		<antcall target="executeTomcatAction">
			<param name="action" value="start" />
			<param name="tomcat.bin" value="${tomcat.2.bin}" />
			<param name="tomcat.home" value="${tomcat.2}" />
		</antcall>
		<!-- sleep seconds="${sleep}" />
		<antcall target="executeTomcatAction">
			<param name="action" value="start" />
			<param name="tomcat.bin" value="${tomcat.3.bin}" />
			<param name="tomcat.home" value="${tomcat.3}" />
		</antcall -->
	</target>
	<target name="stop.tomcat.cluster">
		<antcall target="executeTomcatAction">
			<param name="action" value="stop" />
			<param name="tomcat.bin" value="${tomcat.1.bin}" />
			<param name="tomcat.home" value="${tomcat.1}" />
		</antcall>
		<antcall target="executeTomcatAction">
			<param name="action" value="stop" />
			<param name="tomcat.bin" value="${tomcat.2.bin}" />
			<param name="tomcat.home" value="${tomcat.2}" />
		</antcall>
		<antcall target="executeTomcatAction">
			<param name="action" value="stop" />
			<param name="tomcat.bin" value="${tomcat.3.bin}" />
			<param name="tomcat.home" value="${tomcat.3}" />
		</antcall>
	</target>

	<target name="executeTomcatAction">
		<java jar="${tomcat.bin}/bootstrap.jar" dir="${tomcat.bin}" fork="yes" spawn="true">
			<jvmarg value="-Dcatalina.home=${tomcat.home}" />
			<jvmarg value="-Xms512m" />
			<jvmarg value="-Xmx2048m" />
			<jvmarg value="-XX:PermSize=64m" />
			<jvmarg value="-XX:MaxPermSize=256m" />
			<arg line="${action}" />
		</java>
	</target>

	<target name="startJenkins">
		<java jar="${jenkins.bin}/bootstrap.jar" dir="${jenkins.bin}" fork="yes" spawn="true">
			<jvmarg value="-Dcatalina.home=${jenkins.home}" />
			<jvmarg value="-Xms512m" />
			<jvmarg value="-Xmx2048m" />
			<jvmarg value="-XX:PermSize=128m" />
			<jvmarg value="-XX:MaxPermSize=256m" />
			<arg line="start" />
		</java>
	</target>

	<target name="deploy">
		<!-- Delete the index directories in the cluster. -->
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${cluster.directory}/">
				<include name="**/ikube*.war" />
				<include name="**/ikube*/**" />
			</fileset>
		</delete>
		<!-- Deploy the ikube war into the cluster. -->
		<copy file="${target.directory}/${ikube.war}" todir="${tomcat.1.webapps}" overwrite="true" failonerror="false" />
		<copy file="${target.directory}/${ikube.war}" todir="${tomcat.2.webapps}" overwrite="true" failonerror="false" />
		<copy file="${target.directory}/${ikube.war}" todir="${tomcat.3.webapps}" overwrite="true" failonerror="false" />
	</target>

	<!-- 
		This target will copy all the Spring configuration files to a location. Then remove all the classpath 
		parts of the configuration files as they will be used in an external configuration, and the Spring application 
		context will use the file system application context which is relative to ehe individual files. The configuration 
		files will then be jared and added to the war as a convenience. Also for the testing the configuration jar
		will be unjared into one of the servers to continuously test the external configuration.  
	-->
	<target name="copy.configuration">
		<delete dir="${configuration.directory}" />
		<copy todir="${configuration.directory}/ikube">
			<fileset dir="../core/src/main/resources/META-INF">
				<exclude name="**/aop.xml" />
				<exclude name="**/log4j.properties" />
				<exclude name="**/persistence.xml" />
				<exclude name="**/spring.handlers" />
				<exclude name="**/spring.schemas" />
				<exclude name="**/spring.tooling" />
				<exclude name="**/spelling/**" />
				<exclude name="**/persistence/**" />
				<exclude name="**/mime/**" />
				<exclude name="**/flatfile/**" />
			</fileset>
		</copy>
		<jar destfile="${configuration.directory}/${ikube.configuration.jar}" basedir="${configuration.directory}" />
		<copy file="${configuration.directory}/${ikube.configuration.jar}" todir="./src/main/webapp/docs" failonerror="true" />
		<unjar src="${configuration.directory}/${ikube.configuration.jar}" dest="${ikube.configuration.directory}" overwrite="true" />
		<unjar src="${configuration.directory}/${ikube.configuration.jar}" dest="${tomcat.1.bin}" overwrite="true" />
		<unjar src="${configuration.directory}/${ikube.configuration.jar}" dest="${tomcat.2.bin}" overwrite="true" />
		<unjar src="${configuration.directory}/${ikube.configuration.jar}" dest="${tomcat.3.bin}" overwrite="true" />
	</target>

	<target name="startUbuntu">
		<exec executable="cmd">
			<arg value="VBoxManage" />
			<arg value="startvm" />
			<arg value="Ubuntu 11.4" />
		</exec>
	</target>

	<target name="hsqldb">
		<java classname="org.hsqldb.Server" fork="yes" failonerror="true" classpathref="hsqldb">
			<arg value="-database.0" />
			<arg value="file:${database.dir}/${database.name}" />
		</java>
	</target>

</project>