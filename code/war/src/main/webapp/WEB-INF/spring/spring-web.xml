<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:property="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"

    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <context:spring-configured/>
    <context:annotation-config/>
    <context:component-scan base-package="ikube"/>

    <context:property-placeholder
        location="classpath*:**/spring.properties"
        properties-ref="ikube.toolkit.PropertyConfigurer"/>

    <bean
        id="ikube.toolkit.Logging"
        class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
        property:staticMethod="ikube.toolkit.Logging.configure"/>

    <!-- This bean will look through the classpath and load every Spring properties file it finds. -->
    <bean
        id="ikube.toolkit.PropertyConfigurer"
        class="ikube.toolkit.PropertyConfigurer"
        property:fileNamePattern="spring.properties"
        lazy-init="false"
        init-method="initialize"/>

    <!-- External file system resources. -->
    <import resource="file:ikube/spring*.xml"/>

    <bean class="ikube.toolkit.ApplicationContextManager" init-method="initialize"/>
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>
    <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>

    <!-- This configures the tiles container. -->
    <bean
        id="tilesConfigurer"
        class="org.springframework.web.servlet.view.tiles2.TilesConfigurer"
        property:definitions="/WEB-INF/tiles-defs/templates.xml"/>

    <!--
        This is the second handler that will be called after the controller and will finally
        resolve the view, i.e. it will wire the templates together and forward to the correct page.
    -->
    <bean
        id="vewResolver"
        class="org.springframework.web.servlet.view.UrlBasedViewResolver"
        property:viewClass="org.springframework.web.servlet.view.tiles2.TilesView"/>

    <mvc:view-controller path="/login.html"/>
    <!-- <mvc:view-controller view-name="default" path="/" /> -->
    <!-- <mvc:view-controller view-name="index" path="/index.html" /> -->

    <mvc:view-controller path="/system/dash.html"/>
    <mvc:view-controller path="/system/indexes.html"/>
    <mvc:view-controller path="/system/crud.html"/>

    <mvc:view-controller path="/documentation/apis.html"/>
    <mvc:view-controller path="/documentation/docs.html"/>

    <mvc:view-controller path="/search/search.html"/>

    <mvc:view-controller path="/analytics/create.html"/>
    <mvc:view-controller path="/analytics/train.html"/>
    <mvc:view-controller path="/analytics/analyze.html"/>

    <mvc:view-controller path="/application/happy.html"/>
    <mvc:view-controller path="/application/twitter.html"/>

    <mvc:interceptors>
        <bean
            class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
            property:paramName="language"/>
    </mvc:interceptors>

    <bean
        id="localeResolver"
        class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
        property:cookieName="language"
        property:cookieMaxAge="604800"/>

    <!-- Configure the multipart resolver -->
    <bean
        id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
        property:maxUploadSize="10000000"/>

</beans>