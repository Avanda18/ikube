<?xml version="1.0" encoding="UTF-8"?>

<!--suppress SpringBeanNameConventionInspection -->
<beans
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:property="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"

    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <description>This file is for deploying ikube into a cluster using ssh and scp.</description>

    <context:property-placeholder
        location="
            classpath:*/**/spring.properties,
            */**/spring-local.properties"
        properties-ref="ikube.toolkit.PropertyConfigurer"/>

    <bean
        id="ikube.toolkit.Logging"
        class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
        property:staticMethod="ikube.toolkit.Logging.configure"/>

    <!-- This bean will look through the classpath and load every Spring properties file it finds. -->
    <bean
        id="ikube.toolkit.PropertyConfigurer"
        class="ikube.toolkit.PropertyConfigurer"
        property:fileNamePattern="spring.properties"
        lazy-init="false"
        init-method="initialize"/>

    <!-- Turn on AspectJ @Configurable support -->
    <context:spring-configured/>
    <context:component-scan base-package="ikube.deploy"/>

    <bean
        class="ikube.deploy.Deployer"
        property:parallel="true"
        property:maxWaitTime="60"
        property:servers-ref="servers"/>

    <util:list id="servers">
        <ref local="server"/>
        <ref local="server-one"/>
        <ref local="server-two"/>
        <ref local="server-three"/>
        <!-- 
	  Note: Have to get sshj to execute as sudo!
	  Update 04-03-2014: This seems to be impossible, so the solution was to run the 
	    server on port 8080, and have the router point to this port. Not very convenient
	    at all. But in fact, it seems that it could eb possible to run sudo, but every
	    thing needs to be on one line, and the user must be configured to not need a 
	    password to run sudo.
	-->
        <!-- ref local="server-production"/ -->
    </util:list>

    <!-- This is the base server. -->
    <bean
        id="server"
        name="server"
        class="ikube.deploy.model.Server"
        property:ip="${server-system-ip}"
        property:username="${username}"
        property:password="${password}"
        property:actions-ref="actions"/>

    <util:list id="actions">
        <ref local="stop-action"/>
        <ref local="clean-action"/>
        <ref local="copy-action"/>
        <!--<ref local="start-action"/>-->
    </util:list>

    <bean
        id="stop-action"
        name="stop-action"
        class="ikube.deploy.action.CmdAction"
        property:breakOnError="true"
        property:commands-ref="stop-commands"/>
    <util:list id="stop-commands">
        <value>. /etc/profile;cd ${tomcat-bin};./catalina.sh stop;sleep 15;</value>
        <!-- value>ps -ef | grep ${tomcat} | grep -v grep | awk '{print $2}' | xargs kill -9;</value -->
	<value>kill -9 $(ps aux | grep ${tomcat} | grep -v grep | awk '{print $2}')</value>
    </util:list>

    <bean
        id="clean-action"
        name="clean-action"
        class="ikube.deploy.action.CmdAction"
        property:breakOnError="true"
        property:commands-ref="clean-commands"/>
    <util:list id="clean-commands">
        <value>chmod 777 -R ${tomcat};</value>

        <value>rm -rf ${tomcat-bin}/ikube/common;</value>
        <value>rm -rf ${tomcat-bin}/ikube/integration;</value>
        <value>rm -rf ${tomcat}/webapps/ikube;</value>
        <value>rm -rf ${tomcat}/webapps/ikube.war;</value>

        <value>rm -rf ${tomcat}/logs;</value>
        <value>rm -rf ${tomcat}/temp;</value>
        <value>rm -rf ${tomcat}/work/Catalina/localhost;</value>

        <value>mkdir -p ${tomcat-bin}/ikube/common;</value>
        <value>mkdir -p ${tomcat-bin}/ikube/integration;</value>

        <value>mkdir -p ${tomcat}/logs;</value>
        <value>mkdir -p ${tomcat}/temp;</value>
        <value>mkdir -p ${tomcat}/work/Catalina/localhost;</value>

        <value>chmod 777 -R ${tomcat};</value>
    </util:list>

    <bean
        id="copy-action"
        name="copy-action"
        class="ikube.deploy.action.CopyAction"
        property:breakOnError="true"
        property:files-ref="files"
        property:directories-ref="directories"/>
    <util:map id="files">
        <entry key="code/war/target/${ikube-war}" value="${tomcat-webapps}"/>
    </util:map>
    <util:map id="directories">
        <entry key="${resources-directory}/ikube/common" value="${tomcat-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/integration" value="${tomcat-bin}/ikube"/>
        <!--<entry key="${resources-directory}/analytics" value="${tomcat-bin}/ikube"/>-->
        <!--<entry key="${resources-directory}/indexes/production" value="${tomcat-bin}/ikube"/>-->
        <!--<entry key="${resources-directory}/indexes/twitter" value="${tomcat-bin}/ikube"/>-->
    </util:map>

    <bean
        id="start-action"
        name="start-action"
        class="ikube.deploy.action.CmdAction"
        property:breakOnError="true"
        property:commands-ref="start-commands"/>
    <util:list id="start-commands">
        <value>. /etc/profile;chmod 777 -R ${tomcat};cd ${tomcat-bin};./catalina.sh start;sleep 15;</value>
    </util:list>

    <!-- Cluster servers one, two and three -->

    <!-- One -->
    <bean
        id="server-one"
        name="server-one"
        class="ikube.deploy.model.Server"
        property:ip="${server-system-ip}"
        property:username="${username}"
        property:password="${password}"
        property:actions-ref="actions-one"/>

    <util:list id="actions-one">
        <ref local="stop-action-one"/>
        <ref local="clean-action-one"/>
        <ref local="copy-action-one"/>
        <ref local="start-action-one"/>
    </util:list>

    <bean
        id="stop-action-one"
        name="stop-action-one"
        class="ikube.deploy.action.CmdAction"
        property:breakOnError="true"
        property:commands-ref="stop-commands-one"/>
    <util:list id="stop-commands-one">
        <value>. /etc/profile;cd ${tomcat-one-bin};./catalina.sh stop;sleep 15;</value>
        <!-- value>ps -ef | grep ${tomcat-one} | grep -v grep | awk '{print $2}' | xargs kill -9;</value -->
	<value>kill -9 $(ps aux | grep ${tomcat-one} | grep -v grep | awk '{print $2}')</value>
    </util:list>

    <bean
        id="clean-action-one"
        name="clean-action-one"
        class="ikube.deploy.action.CmdAction"
        property:breakOnError="true"
        property:commands-ref="clean-commands-one"/>
    <util:list id="clean-commands-one">
        <value>chmod 777 -R ${tomcat-one};</value>

        <value>rm -rf ${tomcat-one-bin}/ikube;</value>
        <value>rm -rf ${tomcat-one}/webapps/ikube;</value>
        <value>rm -rf ${tomcat-one}/webapps/ikube.war;</value>

        <value>rm -rf ${tomcat-one}/logs;</value>
        <value>rm -rf ${tomcat-one}/temp;</value>
        <value>rm -rf ${tomcat-one}/work/Catalina/localhost;</value>

        <value>mkdir -p ${tomcat-one-bin}/ikube;</value>

        <value>mkdir -p ${tomcat-one}/logs;</value>
        <value>mkdir -p ${tomcat-one}/temp;</value>
        <value>mkdir -p ${tomcat-one}/work/Catalina/localhost;</value>

        <value>chmod 777 -R ${tomcat-one};</value>
    </util:list>

    <bean
        id="copy-action-one"
        name="copy-action-one"
        class="ikube.deploy.action.CopyAction"
        property:breakOnError="true"
        property:files-ref="files-one"
        property:directories-ref="directories-one"/>
    <util:map id="files-one">
        <entry key="code/war/target/${ikube-war}" value="${tomcat-one-webapps}"/>
    </util:map>
    <util:map id="directories-one">
        <entry key="${resources-directory}/ikube" value="${tomcat-one-bin}"/>
        <entry key="${resources-directory}/analytics" value="${tomcat-one-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/integration" value="${tomcat-one-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/production" value="${tomcat-one-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/twitter" value="${tomcat-one-bin}/ikube"/>
    </util:map>

    <bean
        id="start-action-one"
        name="start-action-one"
        class="ikube.deploy.action.CmdAction"
        property:breakOnError="true"
        property:commands-ref="start-commands-one"/>
    <util:list id="start-commands-one">
        <value>. /etc/profile;chmod 777 -R ${tomcat-one};cd ${tomcat-one-bin};./catalina.sh start;sleep 15;</value>
    </util:list>
    <!-- End one -->

    <!-- Two -->
    <bean
        id="server-two"
        name="server-two"
        class="ikube.deploy.model.Server"
        property:ip="${server-system-ip}"
        property:username="${username}"
        property:password="${password}"
        property:actions-ref="actions-two"/>

    <util:list id="actions-two">
        <ref local="stop-action-two"/>
        <ref local="clean-action-two"/>
        <ref local="copy-action-two"/>
        <ref local="start-action-two"/>
    </util:list>

    <bean
        id="stop-action-two"
        name="stop-action-two"
        class="ikube.deploy.action.CmdAction"
        property:breakOnError="true"
        property:commands-ref="stop-commands-two"/>
    <util:list id="stop-commands-two">
        <value></value>
        <value>. /etc/profile;cd ${tomcat-two-bin};./catalina.sh stop;sleep 15;</value>
        <!-- value>ps -ef | grep ${tomcat-two} | grep -v grep | awk '{print $2}' | xargs kill -9;</value -->
	<value>kill -9 $(ps aux | grep ${tomcat-two} | grep -v grep | awk '{print $2}')</value>
    </util:list>

    <bean
        id="clean-action-two"
        name="clean-action-two"
        class="ikube.deploy.action.CmdAction"
        property:breakOnError="true"
        property:commands-ref="clean-commands-two"/>
    <util:list id="clean-commands-two">
        <value>chmod 777 -R ${tomcat-two};</value>

        <value>rm -rf ${tomcat-two-bin}/ikube;</value>
        <value>rm -rf ${tomcat-two}/webapps/ikube;</value>
        <value>rm -rf ${tomcat-two}/webapps/ikube.war;</value>

        <value>rm -rf ${tomcat-two}/logs;</value>
        <value>rm -rf ${tomcat-two}/temp;</value>
        <value>rm -rf ${tomcat-two}/work/Catalina/localhost;</value>

        <value>mkdir -p ${tomcat-two-bin}/ikube;</value>

        <value>mkdir -p ${tomcat-two}/logs;</value>
        <value>mkdir -p ${tomcat-two}/temp;</value>
        <value>mkdir -p ${tomcat-two}/work/Catalina/localhost;</value>

        <value>chmod 777 -R ${tomcat-two};</value>
    </util:list>

    <bean
        id="copy-action-two"
        name="copy-action-two"
        class="ikube.deploy.action.CopyAction"
        property:breakOnError="true"
        property:files-ref="files-two"
        property:directories-ref="directories-two"/>
    <util:map id="files-two">
        <entry key="code/war/target/${ikube-war}" value="${tomcat-two-webapps}"/>
    </util:map>
    <util:map id="directories-two">
        <entry key="${resources-directory}/ikube" value="${tomcat-two-bin}"/>
        <entry key="${resources-directory}/analytics" value="${tomcat-two-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/integration" value="${tomcat-two-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/production" value="${tomcat-two-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/twitter" value="${tomcat-two-bin}/ikube"/>
    </util:map>

    <bean
        id="start-action-two"
        name="start-action-two"
        class="ikube.deploy.action.CmdAction"
        property:breakOnError="true"
        property:commands-ref="start-commands-two"/>
    <util:list id="start-commands-two">
        <value>. /etc/profile;chmod 777 -R ${tomcat-two};cd ${tomcat-two-bin};./catalina.sh start;sleep 15;</value>
    </util:list>
    <!-- End two -->

    <!-- Three -->
    <bean
        id="server-three"
        name="server-three"
        class="ikube.deploy.model.Server"
        property:ip="${server-system-ip}"
        property:username="${username}"
        property:password="${password}"
        property:actions-ref="actions-three"/>

    <util:list id="actions-three">
        <ref local="stop-action-three"/>
        <ref local="clean-action-three"/>
        <ref local="copy-action-three"/>
        <ref local="start-action-three"/>
    </util:list>

    <bean
        id="stop-action-three"
        name="stop-action-three"
        class="ikube.deploy.action.CmdAction"
        property:breakOnError="true"
        property:commands-ref="stop-commands-three"/>
    <util:list id="stop-commands-three">
        <value>. /etc/profile;cd ${tomcat-three-bin};./catalina.sh stop;sleep 15;</value>
        <!-- value>ps -ef | grep ${tomcat-three} | grep -v grep | awk '{print $2}' | xargs kill -9;</value -->
	<value>kill -9 $(ps aux | grep ${tomcat-three} | grep -v grep | awk '{print $2}')</value>
    </util:list>

    <bean
        id="clean-action-three"
        name="clean-action-three"
        class="ikube.deploy.action.CmdAction"
        property:breakOnError="true"
        property:commands-ref="clean-commands-three"/>
    <util:list id="clean-commands-three">
        <value>chmod 777 -R ${tomcat-three};</value>

        <value>rm -rf ${tomcat-three-bin}/ikube;</value>
        <value>rm -rf ${tomcat-three}/webapps/ikube;</value>
        <value>rm -rf ${tomcat-three}/webapps/ikube.war;</value>

        <value>rm -rf ${tomcat-three}/logs;</value>
        <value>rm -rf ${tomcat-three}/temp;</value>
        <value>rm -rf ${tomcat-three}/work/Catalina/localhost;</value>

        <value>mkdir -p ${tomcat-three-bin}/ikube;</value>

        <value>mkdir -p ${tomcat-three}/logs;</value>
        <value>mkdir -p ${tomcat-three}/temp;</value>
        <value>mkdir -p ${tomcat-three}/work/Catalina/localhost;</value>

        <value>chmod 777 -R ${tomcat-three};</value>
    </util:list>

    <bean
        id="copy-action-three"
        name="copy-action-three"
        class="ikube.deploy.action.CopyAction"
        property:breakOnError="true"
        property:files-ref="files-three"
        property:directories-ref="directories-three"/>
    <util:map id="files-three">
        <entry key="code/war/target/${ikube-war}" value="${tomcat-three-webapps}"/>
    </util:map>
    <util:map id="directories-three">
        <entry key="${resources-directory}/ikube" value="${tomcat-three-bin}"/>
        <entry key="${resources-directory}/analytics" value="${tomcat-three-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/integration" value="${tomcat-three-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/production" value="${tomcat-three-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/twitter" value="${tomcat-three-bin}/ikube"/>
    </util:map>

    <bean
        id="start-action-three"
        name="start-action-three"
        class="ikube.deploy.action.CmdAction"
        property:breakOnError="true"
        property:commands-ref="start-commands-three"/>
    <util:list id="start-commands-three">
        <value>. /etc/profile;chmod 777 -R ${tomcat-three};cd ${tomcat-three-bin};./catalina.sh start;sleep 15;</value>
    </util:list>
    <!-- End three -->

    <!-- Production -->
    <bean
        id="server-production"
        name="server-production"
        class="ikube.deploy.model.Server"
        property:ip="${server-production-ip}"
        property:username="${production-username}"
        property:password="${production-password}"
        property:actions-ref="actions-production"/>

    <util:list id="actions-production">
        <ref local="stop-action-production"/>
        <ref local="clean-action-production"/>
        <ref local="copy-action-production"/>
        <ref local="start-action-production"/>
    </util:list>

    <bean
        id="stop-action-production"
        name="stop-action-production"
        class="ikube.deploy.action.CmdAction"
        property:breakOnError="false"
        property:commands-ref="stop-commands-production"/>
    <util:list id="stop-commands-production">
        <value>. /etc/profile;cd ${tomcat-production-bin};./catalina.sh stop; sleep 15;</value>
        <value>kill -9 $(ps aux | grep ${tomcat-production} | grep -v grep | awk '{print $2}')</value>
    </util:list>

    <bean
        id="clean-action-production"
        name="clean-action-production"
        class="ikube.deploy.action.CmdAction"
        property:breakOnError="false"
        property:commands-ref="clean-commands-production"/>
    <util:list id="clean-commands-production">
        <value>chmod 777 -R ${tomcat-production};</value>

        <value>rm -rf ${tomcat-production-bin}/ikube;</value>
        <value>rm -rf ${tomcat-production}/webapps/ikube;</value>
        <value>rm -rf ${tomcat-production}/webapps/ikube.war;</value>

        <value>rm -rf ${tomcat-production}/logs;</value>
        <value>rm -rf ${tomcat-production}/temp;</value>
        <value>rm -rf ${tomcat-production}/work/Catalina/localhost;</value>

        <value>mkdir -p ${tomcat-production-bin}/ikube;</value>

        <value>mkdir -p ${tomcat-production}/logs;</value>
        <value>mkdir -p ${tomcat-production}/temp;</value>
        <value>mkdir -p ${tomcat-production}/work/Catalina/localhost;</value>

        <value>chmod 777 -R ${tomcat-production};</value>
    </util:list>

    <bean
        id="copy-action-production"
        name="copy-action-production"
        class="ikube.deploy.action.CopyAction"
        property:breakOnError="false"
        property:files-ref="files-production"
        property:directories-ref="directories-production"/>
    <util:map id="files-production">
        <entry key="code/war/target/${ikube-war}" value="${tomcat-production-webapps}"/>
    </util:map>
    <util:map id="directories-production">
        <entry key="${resources-directory}/ikube" value="${tomcat-production-bin}"/>
        <entry key="${resources-directory}/analytics" value="${tomcat-production-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/production" value="${tomcat-production-bin}/ikube"/>
    </util:map>

    <bean
        id="start-action-production"
        name="start-action-production"
        class="ikube.deploy.action.CmdAction"
        property:breakOnError="false"
        property:commands-ref="start-commands-production"/>
    <util:list id="start-commands-production">
        <!-- This must all be on line line to maintain the session, and MUST sleep for a bit afterwards too! -->
        <value>. /etc/profile;chmod 777 -R ${tomcat-production};cd ${tomcat-production-bin};pwd;nohup ./startup.sh &amp; sleep 10;</value>
    </util:list>
    <!-- End production -->

</beans>