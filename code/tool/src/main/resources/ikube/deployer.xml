<?xml version="1.0" encoding="UTF-8"?>

<!--suppress SpringBeanNameConventionInspection -->
<beans
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:property="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"

    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <description>This file is for deploying ikube into a cluster using ssh and scp.</description>

    <context:property-placeholder
        location="
            classpath:*/**/spring.properties,
            */**/spring-local.properties"
        properties-ref="ikube.toolkit.PropertyConfigurer"/>

    <bean
        id="ikube.toolkit.Logging"
        class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
        property:staticMethod="ikube.toolkit.Logging.configure"/>

    <!-- This bean will look through the classpath and load every Spring properties file it finds. -->
    <bean
        id="ikube.toolkit.PropertyConfigurer"
        class="ikube.toolkit.PropertyConfigurer"
        property:fileNamePattern="spring.properties"
        lazy-init="false"
        init-method="initialize"/>

    <!-- Turn on AspectJ @Configurable support -->
    <context:spring-configured/>
    <context:component-scan base-package="ikube.deploy"/>

    <bean
        class="ikube.deploy.Deployer"
        property:parallel="true"
        property:maxWaitTime="60"
        property:servers-ref="servers"/>

    <util:list id="servers">
        <!-- ref local="server"/ -->
        <ref local="server-one"/>
        <ref local="server-two"/>
        <ref local="server-three"/>
	<ref local="server-four"/>
	<ref local="server-five"/>
	<ref local="server-six"/>
        <!-- 
	  Note 04-03-2014: Have to get sshj to execute as sudo!
	  Update later that day: This seems to be impossible, so the solution was to run the 
	    server on port 8080, and have the router point to this port. Not very convenient
	    at all. But in fact, it seems that it could be possible to run sudo, but every
	    thing needs to be on one line, and the user must be configured to not need a 
	    password to run sudo, tried and failed... :(
	-->
        <ref local="server-production"/>
    </util:list>

    <!-- This is the base server on the 32 core machine -->
    <bean
        id="server"
        name="server"
        class="ikube.deploy.model.Server"
        property:ip="${server-system-ip}"
        property:username="${username}"
        property:password="${password}"
        property:actions-ref="actions"/>

    <util:list id="actions">
        <ref local="stop-action"/>
        <ref local="clean-action"/>
        <ref local="copy-action"/>
        <!-- ref local="start-action"/ -->
    </util:list>

    <bean
        id="stop-action"
        name="stop-action"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="stop-commands"/>
    <util:list id="stop-commands">
        <value>${tomcat-shutdown};</value>
	<value>${tomcat-kill};</value>
    </util:list>

    <bean
        id="clean-action"
        name="clean-action"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="clean-commands"/>
    <util:list id="clean-commands">
        <value>chmod 777 -R ${tomcat};</value>

        <value>rm -rf ${tomcat-bin}/ikube</value>
        <value>rm -rf ${tomcat}/webapps/ikube*;</value>

        <value>rm -rf ${tomcat}/logs;</value>
        <value>rm -rf ${tomcat}/temp;</value>
        <value>rm -rf ${tomcat}/work;</value>

        <value>mkdir -p ${tomcat-bin}/ikube;</value>

        <value>mkdir -p ${tomcat}/logs;</value>
        <value>mkdir -p ${tomcat}/temp;</value>
        <value>mkdir -p ${tomcat}/work;</value>

        <value>chmod 777 -R ${tomcat};</value>
    </util:list>

    <bean
        id="copy-action"
        name="copy-action"
        class="ikube.deploy.action.CopyAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:files-ref="files"
        property:directories-ref="directories"/>
    <util:map id="files">
        <entry key="${tail-script}" value="${tomcat-bin}"/>
	<entry key="code/war/target/${ikube-war}" value="${tomcat-webapps}"/>
	<!-- This over writes the properties specific for the target environment -->
	<entry key="${resources-directory}/environments/sys/spring.properties" value="${tomcat-bin}/ikube/common"/>
    </util:map>
    <util:map id="directories">
        <entry key="${resources-directory}/ikube" value="${tomcat-bin}"/>
        <entry key="${resources-directory}/analytics" value="${tomcat-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/integration" value="${tomcat-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/production" value="${tomcat-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/twitter" value="${tomcat-bin}/ikube"/>
    </util:map>

    <bean
        id="start-action"
        name="start-action"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="start-commands"/>
    <util:list id="start-commands">
	<value>${tomcat-chmod}</value>
        <value>${tomcat-startup}</value>
    </util:list>

    <!-- Cluster servers one, two and three on the 32 core machine -->

    <!-- One -->
    <bean
        id="server-one"
        name="server-one"
        class="ikube.deploy.model.Server"
        property:ip="${server-system-ip}"
        property:username="${username}"
        property:password="${password}"
        property:actions-ref="actions-one"/>

    <util:list id="actions-one">
        <ref local="stop-action-one"/>
        <ref local="clean-action-one"/>
        <ref local="copy-action-one"/>
        <ref local="start-action-one"/>
    </util:list>

    <bean
        id="stop-action-one"
        name="stop-action-one"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="stop-commands-one"/>
    <util:list id="stop-commands-one">
	<value>${tomcat-one-shutdown};</value>
	<value>${tomcat-one-kill};</value>
    </util:list>

    <bean
        id="clean-action-one"
        name="clean-action-one"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="clean-commands-one"/>
    <util:list id="clean-commands-one">
        <value>chmod 777 -R ${tomcat-one};</value>

        <!-- value>rm -rf ${tomcat-one-bin}/ikube;</value -->
        <value>rm -rf ${tomcat-one}/webapps/ikube;</value>
        <value>rm -rf ${tomcat-one}/webapps/ikube.war;</value>

        <value>rm -rf ${tomcat-one}/logs;</value>
        <value>rm -rf ${tomcat-one}/temp;</value>
        <value>rm -rf ${tomcat-one}/work;</value>

        <!-- value>mkdir -p ${tomcat-one-bin}/ikube;</value -->

        <value>mkdir -p ${tomcat-one}/logs;</value>
        <value>mkdir -p ${tomcat-one}/temp;</value>
        <value>mkdir -p ${tomcat-one}/work;</value>

        <value>chmod 777 -R ${tomcat-one};</value>
    </util:list>

    <bean
        id="copy-action-one"
        name="copy-action-one"
        class="ikube.deploy.action.CopyAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:files-ref="files-one"
        property:directories-ref="directories-one"/>
    <util:map id="files-one">
	<entry key="${tail-script}" value="${tomcat-one-bin}"/>
        <entry key="code/war/target/${ikube-war}" value="${tomcat-one-webapps}"/>
	<!-- This over writes the properties specific for the target environment -->
	<entry key="${resources-directory}/environments/sys/spring.properties" value="${tomcat-one-bin}/ikube/common"/>
    </util:map>
    <util:map id="directories-one">
        <!-- entry key="${resources-directory}/ikube" value="${tomcat-one-bin}"/ -->
        <!-- entry key="${resources-directory}/analytics" value="${tomcat-one-bin}/ikube"/ -->
        <entry key="${resources-directory}/indexes/integration" value="${tomcat-one-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/production" value="${tomcat-one-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/twitter" value="${tomcat-one-bin}/ikube"/>
    </util:map>

    <bean
        id="start-action-one"
        name="start-action-one"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="start-commands-one"/>
    <util:list id="start-commands-one">
	<value>${tomcat-one-chmod}</value>
	<value>${tomcat-one-startup}</value>
    </util:list>
    <!-- End one -->

    <!-- Two -->
    <bean
        id="server-two"
        name="server-two"
        class="ikube.deploy.model.Server"
        property:ip="${server-system-ip}"
        property:username="${username}"
        property:password="${password}"
        property:actions-ref="actions-two"/>

    <util:list id="actions-two">
        <ref local="stop-action-two"/>
        <ref local="clean-action-two"/>
        <ref local="copy-action-two"/>
        <ref local="start-action-two"/>
    </util:list>

    <bean
        id="stop-action-two"
        name="stop-action-two"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="stop-commands-two"/>
    <util:list id="stop-commands-two">
        <value></value>
        <value>${tomcat-two-shutdown};</value>
        <value>${tomcat-two-kill};</value>
    </util:list>

    <bean
        id="clean-action-two"
        name="clean-action-two"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="clean-commands-two"/>
    <util:list id="clean-commands-two">
        <value>chmod 777 -R ${tomcat-two};</value>

        <!-- value>rm -rf ${tomcat-two-bin}/ikube;</value -->
        <value>rm -rf ${tomcat-two}/webapps/ikube;</value>
        <value>rm -rf ${tomcat-two}/webapps/ikube.war;</value>

        <value>rm -rf ${tomcat-two}/logs;</value>
        <value>rm -rf ${tomcat-two}/temp;</value>
        <value>rm -rf ${tomcat-two}/work;</value>

        <!-- value>mkdir -p ${tomcat-two-bin}/ikube;</value -->

        <value>mkdir -p ${tomcat-two}/logs;</value>
        <value>mkdir -p ${tomcat-two}/temp;</value>
        <value>mkdir -p ${tomcat-two}/work;</value>

        <value>chmod 777 -R ${tomcat-two};</value>
    </util:list>

    <bean
        id="copy-action-two"
        name="copy-action-two"
        class="ikube.deploy.action.CopyAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:files-ref="files-two"
        property:directories-ref="directories-two"/>
    <util:map id="files-two">
	<entry key="${tail-script}" value="${tomcat-two-bin}"/>
        <entry key="code/war/target/${ikube-war}" value="${tomcat-two-webapps}"/>
	<!-- This over writes the properties specific for the target environment -->
	<entry key="${resources-directory}/environments/sys/spring.properties" value="${tomcat-two-bin}/ikube/common"/>
    </util:map>
    <util:map id="directories-two">
        <!-- entry key="${resources-directory}/ikube" value="${tomcat-two-bin}"/ -->
        <!-- entry key="${resources-directory}/analytics" value="${tomcat-two-bin}/ikube"/ -->
        <entry key="${resources-directory}/indexes/integration" value="${tomcat-two-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/production" value="${tomcat-two-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/twitter" value="${tomcat-two-bin}/ikube"/>
    </util:map>

    <bean
        id="start-action-two"
        name="start-action-two"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="start-commands-two"/>
    <util:list id="start-commands-two">
	<value>${tomcat-two-chmod}</value>
	<value>sleep 20;</value>
        <value>${tomcat-two-startup}</value>
    </util:list>
    <!-- End two -->

    <!-- Three -->
    <bean
        id="server-three"
        name="server-three"
        class="ikube.deploy.model.Server"
        property:ip="${server-system-ip}"
        property:username="${username}"
        property:password="${password}"
        property:actions-ref="actions-three"/>

    <util:list id="actions-three">
        <ref local="stop-action-three"/>
        <ref local="clean-action-three"/>
        <ref local="copy-action-three"/>
        <ref local="start-action-three"/>
    </util:list>

    <bean
        id="stop-action-three"
        name="stop-action-three"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="stop-commands-three"/>
    <util:list id="stop-commands-three">
        <value>${tomcat-three-shutdown};</value>
        <value>${tomcat-three-kill};</value>
    </util:list>

    <bean
        id="clean-action-three"
        name="clean-action-three"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="clean-commands-three"/>
    <util:list id="clean-commands-three">
        <value>chmod 777 -R ${tomcat-three};</value>

        <!-- value>rm -rf ${tomcat-three-bin}/ikube;</value -->
        <value>rm -rf ${tomcat-three}/webapps/ikube;</value>
        <value>rm -rf ${tomcat-three}/webapps/ikube.war;</value>

        <value>rm -rf ${tomcat-three}/logs;</value>
        <value>rm -rf ${tomcat-three}/temp;</value>
        <value>rm -rf ${tomcat-three}/work;</value>

        <!-- value>mkdir -p ${tomcat-three-bin}/ikube;</value -->

        <value>mkdir -p ${tomcat-three}/logs;</value>
        <value>mkdir -p ${tomcat-three}/temp;</value>
        <value>mkdir -p ${tomcat-three}/work;</value>

        <value>chmod 777 -R ${tomcat-three};</value>
    </util:list>

    <bean
        id="copy-action-three"
        name="copy-action-three"
        class="ikube.deploy.action.CopyAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:files-ref="files-three"
        property:directories-ref="directories-three"/>
    <util:map id="files-three">
	<entry key="${tail-script}" value="${tomcat-three-bin}"/>
        <entry key="code/war/target/${ikube-war}" value="${tomcat-three-webapps}"/>
	<!-- This over writes the properties specific for the target environment -->
	<entry key="${resources-directory}/environments/sys/spring.properties" value="${tomcat-three-bin}/ikube/common"/>
    </util:map>
    <util:map id="directories-three">
        <!-- entry key="${resources-directory}/ikube" value="${tomcat-three-bin}"/ -->
        <!-- entry key="${resources-directory}/analytics" value="${tomcat-three-bin}/ikube"/ -->
        <entry key="${resources-directory}/indexes/integration" value="${tomcat-three-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/production" value="${tomcat-three-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/twitter" value="${tomcat-three-bin}/ikube"/>
    </util:map>

    <bean
        id="start-action-three"
        name="start-action-three"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="start-commands-three"/>
    <util:list id="start-commands-three">
	<value>${tomcat-three-chmod}</value>
	<value>sleep 40;</value>
        <value>${tomcat-three-startup}</value>
    </util:list>
    <!-- End three -->

    <!-- Four -->
    <bean
        id="server-four"
        name="server-four"
        class="ikube.deploy.model.Server"
        property:ip="${server-system-ip}"
        property:username="${username}"
        property:password="${password}"
        property:actions-ref="actions-four"/>

    <util:list id="actions-four">
        <ref local="stop-action-four"/>
        <ref local="clean-action-four"/>
        <ref local="copy-action-four"/>
        <ref local="start-action-four"/>
    </util:list>

    <bean
        id="stop-action-four"
        name="stop-action-four"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="stop-commands-four"/>
    <util:list id="stop-commands-four">
        <value>${tomcat-four-shutdown};</value>
        <value>${tomcat-four-kill};</value>
    </util:list>

    <bean
        id="clean-action-four"
        name="clean-action-four"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="clean-commands-four"/>
    <util:list id="clean-commands-four">
        <value>chmod 777 -R ${tomcat-four};</value>

        <value>rm -rf ${tomcat-four-bin}/ikube;</value>
        <value>rm -rf ${tomcat-four}/webapps/ikube;</value>
        <value>rm -rf ${tomcat-four}/webapps/ikube.war;</value>

        <value>rm -rf ${tomcat-four}/logs;</value>
        <value>rm -rf ${tomcat-four}/temp;</value>
        <value>rm -rf ${tomcat-four}/work;</value>

        <value>mkdir -p ${tomcat-four-bin}/ikube;</value>

        <value>mkdir -p ${tomcat-four}/logs;</value>
        <value>mkdir -p ${tomcat-four}/temp;</value>
        <value>mkdir -p ${tomcat-four}/work;</value>

        <value>chmod 777 -R ${tomcat-four};</value>
    </util:list>

    <bean
        id="copy-action-four"
        name="copy-action-four"
        class="ikube.deploy.action.CopyAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:files-ref="files-four"
        property:directories-ref="directories-four"/>
    <util:map id="files-four">
	<entry key="${tail-script}" value="${tomcat-four-bin}"/>
        <entry key="code/war/target/${ikube-war}" value="${tomcat-four-webapps}"/>
	<!-- This over writes the properties specific for the target environment -->
	<entry key="${resources-directory}/environments/sys/spring.properties" value="${tomcat-four-bin}/ikube/common"/>
    </util:map>
    <util:map id="directories-four">
        <entry key="${resources-directory}/ikube" value="${tomcat-four-bin}"/>
        <entry key="${resources-directory}/analytics" value="${tomcat-four-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/integration" value="${tomcat-four-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/production" value="${tomcat-four-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/twitter" value="${tomcat-four-bin}/ikube"/>
    </util:map>

    <bean
        id="start-action-four"
        name="start-action-four"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="start-commands-four"/>
    <util:list id="start-commands-four">
	<value>${tomcat-four-chmod}</value>
	<value>sleep 40;</value>
        <value>${tomcat-four-startup}</value>
    </util:list>
    <!-- End four -->
    
    <!-- Five -->
    <bean
        id="server-five"
        name="server-five"
        class="ikube.deploy.model.Server"
        property:ip="${server-system-ip}"
        property:username="${username}"
        property:password="${password}"
        property:actions-ref="actions-five"/>

    <util:list id="actions-five">
        <ref local="stop-action-five"/>
        <ref local="clean-action-five"/>
        <ref local="copy-action-five"/>
        <ref local="start-action-five"/>
    </util:list>

    <bean
        id="stop-action-five"
        name="stop-action-five"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="stop-commands-five"/>
    <util:list id="stop-commands-five">
        <value>${tomcat-five-shutdown};</value>
        <value>${tomcat-five-kill};</value>
    </util:list>

    <bean
        id="clean-action-five"
        name="clean-action-five"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="clean-commands-five"/>
    <util:list id="clean-commands-five">
        <value>chmod 777 -R ${tomcat-five};</value>

        <value>rm -rf ${tomcat-five-bin}/ikube;</value>
        <value>rm -rf ${tomcat-five}/webapps/ikube;</value>
        <value>rm -rf ${tomcat-five}/webapps/ikube.war;</value>

        <value>rm -rf ${tomcat-five}/logs;</value>
        <value>rm -rf ${tomcat-five}/temp;</value>
        <value>rm -rf ${tomcat-five}/work;</value>

        <value>mkdir -p ${tomcat-five-bin}/ikube;</value>

        <value>mkdir -p ${tomcat-five}/logs;</value>
        <value>mkdir -p ${tomcat-five}/temp;</value>
        <value>mkdir -p ${tomcat-five}/work;</value>

        <value>chmod 777 -R ${tomcat-five};</value>
    </util:list>

    <bean
        id="copy-action-five"
        name="copy-action-five"
        class="ikube.deploy.action.CopyAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:files-ref="files-five"
        property:directories-ref="directories-five"/>
    <util:map id="files-five">
	<entry key="${tail-script}" value="${tomcat-five-bin}"/>
        <entry key="code/war/target/${ikube-war}" value="${tomcat-five-webapps}"/>
	<!-- This over writes the properties specific for the target environment -->
	<entry key="${resources-directory}/environments/sys/spring.properties" value="${tomcat-five-bin}/ikube/common"/>
    </util:map>
    <util:map id="directories-five">
        <entry key="${resources-directory}/ikube" value="${tomcat-five-bin}"/>
        <entry key="${resources-directory}/analytics" value="${tomcat-five-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/integration" value="${tomcat-five-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/production" value="${tomcat-five-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/twitter" value="${tomcat-five-bin}/ikube"/>
    </util:map>

    <bean
        id="start-action-five"
        name="start-action-five"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="start-commands-five"/>
    <util:list id="start-commands-five">
	<value>${tomcat-five-chmod}</value>
	<value>sleep 40;</value>
        <value>${tomcat-five-startup}</value>
    </util:list>
    <!-- End five -->
    
    <!-- Six -->
    <bean
        id="server-six"
        name="server-six"
        class="ikube.deploy.model.Server"
        property:ip="${server-system-ip}"
        property:username="${username}"
        property:password="${password}"
        property:actions-ref="actions-six"/>

    <util:list id="actions-six">
        <ref local="stop-action-six"/>
        <ref local="clean-action-six"/>
        <ref local="copy-action-six"/>
        <ref local="start-action-six"/>
    </util:list>

    <bean
        id="stop-action-six"
        name="stop-action-six"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="stop-commands-six"/>
    <util:list id="stop-commands-six">
        <value>${tomcat-six-shutdown};</value>
        <value>${tomcat-six-kill};</value>
    </util:list>

    <bean
        id="clean-action-six"
        name="clean-action-six"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="clean-commands-six"/>
    <util:list id="clean-commands-six">
        <value>chmod 777 -R ${tomcat-six};</value>

        <value>rm -rf ${tomcat-six-bin}/ikube;</value>
        <value>rm -rf ${tomcat-six}/webapps/ikube;</value>
        <value>rm -rf ${tomcat-six}/webapps/ikube.war;</value>

        <value>rm -rf ${tomcat-six}/logs;</value>
        <value>rm -rf ${tomcat-six}/temp;</value>
        <value>rm -rf ${tomcat-six}/work;</value>

        <value>mkdir -p ${tomcat-six-bin}/ikube;</value>

        <value>mkdir -p ${tomcat-six}/logs;</value>
        <value>mkdir -p ${tomcat-six}/temp;</value>
        <value>mkdir -p ${tomcat-six}/work;</value>

        <value>chmod 777 -R ${tomcat-six};</value>
    </util:list>

    <bean
        id="copy-action-six"
        name="copy-action-six"
        class="ikube.deploy.action.CopyAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:files-ref="files-six"
        property:directories-ref="directories-six"/>
    <util:map id="files-six">
	<entry key="${tail-script}" value="${tomcat-six-bin}"/>
        <entry key="code/war/target/${ikube-war}" value="${tomcat-six-webapps}"/>
	<!-- This over writes the properties specific for the target environment -->
	<entry key="${resources-directory}/environments/sys/spring.properties" value="${tomcat-six-bin}/ikube/common"/>
    </util:map>
    <util:map id="directories-six">
        <entry key="${resources-directory}/ikube" value="${tomcat-six-bin}"/>
        <entry key="${resources-directory}/analytics" value="${tomcat-six-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/integration" value="${tomcat-six-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/production" value="${tomcat-six-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/twitter" value="${tomcat-six-bin}/ikube"/>
    </util:map>

    <bean
        id="start-action-six"
        name="start-action-six"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="true"
        property:commands-ref="start-commands-six"/>
    <util:list id="start-commands-six">
	<value>${tomcat-six-chmod}</value>
	<value>sleep 40;</value>
        <value>${tomcat-six-startup}</value>
    </util:list>
    <!-- End six -->

    <!-- Production -->
    <bean
        id="server-production"
        name="server-production"
        class="ikube.deploy.model.Server"
        property:ip="${server-production-ip}"
        property:username="${production-username}"
        property:password="${production-password}"
        property:actions-ref="actions-production"/>

    <util:list id="actions-production">
        <ref local="stop-action-production"/>
        <ref local="clean-action-production"/>
        <ref local="copy-action-production"/>
        <ref local="start-action-production"/>
    </util:list>

    <bean
        id="stop-action-production"
        name="stop-action-production"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="false"
        property:commands-ref="stop-commands-production"/>
    <util:list id="stop-commands-production">
        <value>${tomcat-production-shutdown};</value>
        <value>${tomcat-production-kill};</value>
    </util:list>

    <bean
        id="clean-action-production"
        name="clean-action-production"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="false"
        property:commands-ref="clean-commands-production"/>
    <util:list id="clean-commands-production">
        <value>chmod 777 -R ${tomcat-production};</value>

        <value>rm -rf ${tomcat-production-bin}/ikube;</value>
        <value>rm -rf ${tomcat-production}/webapps/ikube;</value>
        <value>rm -rf ${tomcat-production}/webapps/ikube.war;</value>

        <value>rm -rf ${tomcat-production}/logs;</value>
        <value>rm -rf ${tomcat-production}/temp;</value>
        <value>rm -rf ${tomcat-production}/work;</value>

        <value>mkdir -p ${tomcat-production-bin}/ikube;</value>

        <value>mkdir -p ${tomcat-production}/logs;</value>
        <value>mkdir -p ${tomcat-production}/temp;</value>
        <value>mkdir -p ${tomcat-production}/work;</value>

        <value>chmod 777 -R ${tomcat-production};</value>
    </util:list>

    <bean
        id="copy-action-production"
        name="copy-action-production"
        class="ikube.deploy.action.CopyAction"
	property:sleep="${sleep}"
        property:breakOnError="false"
        property:files-ref="files-production"
        property:directories-ref="directories-production"/>
    <util:map id="files-production">
	<entry key="${tail-script}" value="${tomcat-production-bin}"/>
        <entry key="code/war/target/${ikube-war}" value="${tomcat-production-webapps}"/>
	<!-- This over writes the properties specific for the target environment -->
	<entry key="${resources-directory}/environments/prod/spring.properties" value="${tomcat-production-bin}/ikube/common"/>
    </util:map>
    <util:map id="directories-production">
        <entry key="${resources-directory}/ikube" value="${tomcat-production-bin}"/>
        <entry key="${resources-directory}/analytics" value="${tomcat-production-bin}/ikube"/>
        <entry key="${resources-directory}/indexes/production" value="${tomcat-production-bin}/ikube"/>
    </util:map>

    <bean
        id="start-action-production"
        name="start-action-production"
        class="ikube.deploy.action.CmdAction"
	property:sleep="${sleep}"
        property:breakOnError="false"
        property:commands-ref="start-commands-production"/>
    <util:list id="start-commands-production">
	<value>${tomcat-production-chmod}</value>
        <value>${tomcat-production-startup}</value>
    </util:list>
    <!-- End production -->

</beans>