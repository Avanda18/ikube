=== Weka

Weka is a statistical machine learning library. Please refer to the Weka site for more information on Weka. Ikube
exposes the functionality of Weka over rest web services, putting Weka in the server, and distributes the analyses
throughout the cluster, enabling extreme high volumes, trillions of observations, and allowing for processing of
big data volumes, and allowing for large models of terabytes if necessary. As well as this Ikube also adds functionality
to build the models in parallel, this allows for larger models to be processed in a fraction of the time as the building the
models is often very time consuming, and with millions or billions of instances in the training set, this can take weeks if
not months to build the models on a single core.

Note that the 'Accept' header needs to be application/json.

*link:weka-algorithms.html[available Weka algorithms]* +

=== Example API calls

==== Create a clusterer

This method will create the clusterer, in the example is a SimpleKMeans algorithm, which is an unsupervised
algorithm. The options provided are Weka specific, please refer to the *link:http://www.cs.waikato.ac.nz/ml/weka/[Weka] site
for options for this algorithm.

* Post : http://ikube.be/ikube/service/analyzer/create
* Body:
{"name":"bmw-browsers","analyzer":"ikube.analytics.weka.WekaClusterer","algorithms":["weka.clusterers.SimpleKMeans"],"options":["-N","6"],
"trainingDatas":
["
@relation instances\n\n

@attribute Dealership numeric\n
@attribute Showroom numeric\n
@attribute ComputerSearch numeric\n
@attribute M5 numeric\n
@attribute 3Series numeric\n
@attribute Z4 numeric\n
@attribute Financing numeric\n
@attribute Purchase numeric\n\n

@data\n
1,0,0,0,0,0,0,0\n1,1,1,0,0,0,1,0\n1,0,0,0,0,0,0,0\n1,1,1,1,0,0,1,1\n1,0,1,1,1,0,1,1\n1,1,1,0,1,0,0,0\n
1,0,1,0,0,0,1,1\n1,0,1,0,1,0,0,0\n1,1,1,0,1,0,1,0\n1,0,1,1,1,1,1,1\n1,0,1,1,1,1,1,0\n1,0,1,1,0,1,0,0
"],

"maxTrainings":[2147483647],
"persisted":false,
"built":false,
"id":0}

==== Train an algorithm

This will train the clusterer, adding one vector instance to the data set. When the analyzer is then built again, the
clusterer will include the added instance in the output of the clustering, i.e. it will be clustered along with the other
instances in the input data set.

* Post: http://ikube.be/ikube/service/analyzer/train
* Body: {"context":"bmw-browsers","input":"1,1,0,1,1,0,1,1","duration":0.0,"sizeForClassOrCluster":0,"addAlgorithmOutput":false,"distributed":false,"id":0}

==== Build the model

This method will build the model, in this case perform th clustering, using the specified algorithm and parameters.

* Post: http://ikube.be/ikube/service/analyzer/build
* Body: {"context":"bmw-browsers","duration":0.0,"sizeForClassOrCluster":0,"addAlgorithmOutput":false,"distributed":false,"id":0}

==== Analyze an observation

This method will cluster another instance, the output of which will the the index of the cluster that it most likely belongs to.

* Post: http://ikube.be/ikube/service/analyzer/analyze
* Body: {"context":"bmw-browsers","input":"1,1,0,1,1,0,1,1","duration":0.0,"sizeForClassOrCluster":0,"addAlgorithmOutput":false,"distributed":false,"id":0}

==== Destroy the analyzer

This destroys the algorithm, removing it from memory and releasing any resources, useful for on the fly analyses.

* Post: http://ikube.be/ikube/service/analyzer/destroy
* Body: {"context":"bmw-browsers","duration":0.0,"sizeForClassOrCluster":0,"addAlgorithmOutput":false,"distributed":false,"id":0}