<?xml version="1.0" encoding="UTF-8"?>

<web-app 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"

	xsi:schemaLocation="
		http://java.sun.com/xml/ns/javaee
        http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
        id="WebApp_ID"
		version="2.5">

	<display-name>ikube-gui</display-name>

	<!-- This will load Log4j in the web application. -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<!-- The parameter for Vaadin to specify production, presumably less logging and checking. -->
	<context-param>
		<description>Vaadin production mode</description>
		<param-name>productionMode</param-name>
		<param-value>false</param-value>
	</context-param>
	<!-- This parameter is for the Spring we context loader listener to know where the context files are. -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/spring-web.xml
			/WEB-INF/spring-security.xml</param-value>
	</context-param>
	<!-- This filter is for the security, Spring security. -->
	<!-- <filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->

	<!-- These listeners are for the logging configuration, loading the context and intercepting the request for Jersey. -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	
	<!-- This is the Vaadin application servlet. -->
	<servlet>
		<servlet-name>Application</servlet-name>
		<servlet-class>ikube.servlet.SpringApplicationServlet</servlet-class>
		<init-param>
			<description>Vaadin application bean to start</description>
			<param-name>applicationBean</param-name>
			<param-value>application</param-value>
		</init-param>
		<init-param>
			<param-name>widgetset</param-name>
			<param-value>ikube.gui.widgets.InvientWidgets</param-value>
		</init-param>
	</servlet>
	
	<!-- This servlet is for the rest web services from Jersey. -->
	<servlet>
		<servlet-name>jersey</servlet-name>
		<servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
		<init-param>
			<param-name>com.sun.jersey.config.property.packages</param-name>
			<param-value>ikube.service</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
	<!-- This is the sevlet mapping for Vaadin. -->
	<servlet-mapping>
		<servlet-name>Application</servlet-name>
		<url-pattern>/app/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Application</servlet-name>
		<url-pattern>/VAADIN/*</url-pattern>
	</servlet-mapping>
	
	<!-- This is the servlet mapping for the Jersey rest services. -->
	<servlet-mapping>
		<servlet-name>jersey</servlet-name>
		<url-pattern>/service/*</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>loginform.jsp</welcome-file>
	</welcome-file-list>

	<session-config>
		<session-timeout>10</session-timeout>
	</session-config>

</web-app>