<?xml version="1.0" encoding="UTF-8"?>

<beans
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:property="http://www.springframework.org/schema/p"
	xmlns:transaction="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"

	xsi:schemaLocation="
			http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:property-placeholder
		location="classpath*:**/spring.properties" 
		properties-ref="ikube.toolkit.PropertyConfigurer" />
	<context:annotation-config />
	<context:component-scan base-package="ikube" />
	<transaction:annotation-driven transaction-manager="transactionManager"/>

	<!-- <bean
		class="ikube.toolkit.ApplicationContextManagerPostProcessor" /> -->
	<bean 
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean 
		id="transactionManager" 
		class="org.springframework.orm.jpa.JpaTransactionManager" 
		property:entityManagerFactory-ref="entityManagerFactory" />

	<bean 
		id="entityManagerFactory" 
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" 
		lazy-init="false"
		property:dataSource-ref="nonXaDataSourceH2"
		property:jpaVendorAdapter-ref="jpaAdapter"
		property:jpaPropertyMap-ref="jpaPropertyMap">
		<property name="loadTimeWeaver">
			<bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<property name="persistenceUnitName" value="IkubePersistenceUnitH2"></property>
	</bean>

	<bean 
		id="jpaAdapter" 
		class="org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter"
		property:database="H2" 
		property:showSql="true" />
		
	<util:map id="jpaPropertyMap">
		<entry key="openjpa.ConnectionFactoryProperties" value="PrettyPrint=true,PrettyPrintLineLength=150" />
		<entry key="openjpa.Log" value="DefaultLevel=ERROR,JDBC=ERROR,SQL=ERROR,File=openjpa.log,Runtime=ERROR,Tool=ERROR" />

		<entry key="openjpa.DataCache" value="true(CacheSize=1000,SoftReferenceSize=1000)" />
		<entry key="openjpa.QueryCache" value="true(CacheSize=1000,SoftReferenceSize=1000)" />

		<entry key="openjpa.LockTimeout" value="6000000" />
		<entry key="openjpa.ReadLockLevel" value="write" />
		<entry key="openjpa.WriteLockLevel" value="write" />
		<entry key="openjpa.Optimistic" value="true" />
		<entry key="openjpa.Multithreaded" value="true" />
		<entry key="openjpa.NontransactionalRead" value="false" />
		<entry key="openjpa.AutoDetach" value="commit" />
		<entry key="openjpa.FlushBeforeQueries" value="true" />
		<entry key="openjpa.RuntimeUnenhancedClasses" value="supported" />
		<entry key="openjpa.jdbc.DBDictionary" value="h2(batchLimit=1000)" />

		<!--
			For the first run these have to be uncommented to allow OpenJpa to create the
			tables in the database and commit the connection. Typically the connection
			is managed Xa so can't be committed by OpenJpa. If the properties are uncommented
			then OpenJpa will use these to get a connection to the db and can then commit on
			that connection as it will not be xa.
		-->
		<!-- <entry key="openjpa.jdbc.SynchronizeMappings" value="buildSchema(ForeignKeys=true)" />
		<entry key="openjpa.Connection2UserName" value="db2admin" />
		<entry key="openjpa.Connection2Password" value="db2admin" />
		<entry key="openjpa.Connection2URL" value="jdbc:db2://ikube:50000/ikube" />
		<entry key="openjpa.Connection2DriverName" value="com.ibm.db2.jcc.DB2Driver" /> -->
		
		<entry key="openjpa.jdbc.SynchronizeMappings" value="buildSchema(ForeignKeys=true)" />
		<entry key="openjpa.Connection2UserName" value="sa" />
		<entry key="openjpa.Connection2Password" value="" />
		<entry key="openjpa.Connection2URL" value="${h2.jdbc.url}" />
		<entry key="openjpa.Connection2DriverName" value="${h2.jdbc.driver}" />
	</util:map>

	<transaction:advice id="transactionAdvice" transaction-manager="transactionManager">
		<transaction:attributes>
			<transaction:method name="find*" />
			<transaction:method name="merge*" />
			<transaction:method name="persist*" />
			<transaction:method name="remove*" />
		</transaction:attributes>
	</transaction:advice>

	<aop:config>
		<aop:pointcut id="dataBaseOperation" expression="execution(* ikube.database.jpa.DataBaseJpa.*(..))" />
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="dataBaseOperation" />
	</aop:config>
	
	<!-- The Jpa database for large sets of data. -->
	<bean
		id="ikube.database.jpa.DataBaseJpa"
		class="ikube.database.jpa.DataBaseJpa"
		lazy-init="false" />
	
	<!-- The cluster manager that is responsible for all cluster synchronization stuff. -->
	<bean
		id="ikube.cluster.cache.Cache"
		class="ikube.cluster.cache.Cache"
		lazy-init="false"
		init-method="initialise" />
	<bean
		id="ikube.cluster.IClusterManager"
		class="ikube.cluster.ClusterManager"
		lazy-init="true" >
		<constructor-arg>
			<ref local="ikube.cluster.cache.Cache" />
		</constructor-arg>
	</bean>
	<bean 
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
		property:staticMethod="ikube.cluster.ClusterManager.addShutdownHook"
		lazy-init="false" />
	<bean 
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
		property:staticMethod="ikube.cluster.ClusterManager.addClusterExceptionListener"
		lazy-init="false" />
	
	<!-- 
		These are just pojos that delegate to the real class that can be intercepted by Spring. 
	-->
	<bean 
		id="ikube.service.ISearchDelegate"
		class="ikube.service.SearchDelegate" />
	<bean 
		id="ikube.index.handler.IDocumentDelegate"
		class="ikube.index.handler.DocumentDelegate" />
	
	<!-- The handlers that do the indexing logic. -->
	<bean
		class="ikube.index.handler.internet.IndexableInternetHandler"
		property:threads="${internet.handler.threads}" 
		property:indexableClass="ikube.model.IndexableInternet"
		property:documentDelegate-ref="ikube.index.handler.IDocumentDelegate" />
	<bean
		class="ikube.index.handler.email.IndexableEmailHandler"
		property:threads="${email.handler.threads}"
		property:indexableClass="ikube.model.IndexableEmail" 
		property:documentDelegate-ref="ikube.index.handler.IDocumentDelegate" />
	<bean
		class="ikube.index.handler.filesystem.IndexableFilesystemHandler"
		property:threads="${filesystem.handler.threads}"
		property:indexableClass="ikube.model.IndexableFileSystem" 
		property:documentDelegate-ref="ikube.index.handler.IDocumentDelegate" />
	<bean
		class="ikube.index.handler.database.IndexableTableHandler"
		property:threads="${table.handler.threads}"
		property:indexableClass="ikube.model.IndexableTable" 
		property:documentDelegate-ref="ikube.index.handler.IDocumentDelegate" />

	<bean id="ikube.index.parse.mime.MimeMapper" class="ikube.index.parse.mime.MimeMapper">
		<constructor-arg value="/META-INF/mime/mime-mapping.xml" />
	</bean>
	<bean id="ikube.index.parse.mime.MimeTypes" class="ikube.index.parse.mime.MimeTypes">
		<constructor-arg value="/META-INF/mime/mime-types.xml" />
	</bean>
	
	<!-- The web services. -->
	<bean
		id="ikube.service.SearcherWebService"
		class="ikube.service.SearcherWebService"
		property:searchDelegate-ref="ikube.service.ISearchDelegate" />
	<bean
		id="ikube.service.MonitorWebService"
		class="ikube.service.MonitorWebService" />
	<bean
		id="ikube.service.WebServicePublisher"
		class="ikube.service.WebServicePublisher">
		<constructor-arg ref="ikube.cluster.IClusterManager" />
	</bean>
	
	<!-- The schedules that fire events to start actions. -->
	<bean
		id="ikube.listener.Schedule"
		class="ikube.listener.Schedule"
		property:type="timer"
		property:delay="${delay}"
		property:period="${period}" />
	<bean
		id="ikube.listener.ScheduleBroadCaster"
		class="ikube.listener.Schedule"
		property:type="alive"
		property:delay="60000"
		property:period="60000" />
	<bean
		id="ikube.listener.ScheduleBroadClean"
		class="ikube.listener.Schedule"
		property:type="clean"
		property:delay="600000"
		property:period="600000" />
	<bean
		id="ikube.listener.SchedulePerformance"
		class="ikube.listener.Schedule"
		property:type="performance"
		property:delay="60000"
		property:period="60000" />
	<util:list id="ikube.listener.Schedules">
		<ref bean="ikube.listener.Schedule" />
		<ref bean="ikube.listener.ScheduleBroadCaster" />
		<ref bean="ikube.listener.ScheduleBroadClean" />
		<ref bean="ikube.listener.SchedulePerformance" />
	</util:list>
	
	<bean 
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
		property:staticMethod="ikube.listener.Scheduler.addSchedules">
		<property name="arguments">
			<ref local="ikube.listener.Schedules" />
		</property>
	</bean>
	<bean 
		id="schedulerInitialize" 
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
		property:staticMethod="ikube.listener.Scheduler.initialize">
	</bean>
	
	<!-- 
		This is the mailer that will send mail to targets when things go right, and wrong in fact. This 
		you would want to modify, otherwise I will be getting many, many mails from your system. 
	-->
	<bean
		class="ikube.toolkit.Mailer"
		property:auth="true"
		property:mailHost="smtp.gmail.com"
		property:password="caherline"
		property:port="465"
		property:protocol="pop3"
		property:recipients="ikube.ikube@gmail.com"
		property:sender="ikube.ikube@gmail.com"
		property:user="ikube.ikube" />
	
</beans>