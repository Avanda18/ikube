package ikube.action;

import static org.junit.Assert.assertNotSame;
import static org.junit.Assert.assertTrue;
import ikube.AbstractTest;
import ikube.IConstants;
import ikube.action.index.IndexManager;
import ikube.toolkit.FileUtilities;

import java.io.File;

import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.search.MultiSearcher;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.mockito.Mockito;
import org.mockito.invocation.InvocationOnMock;
import org.mockito.stubbing.Answer;

/**
 * @author Michael Couck
 * @since 21.11.10
 * @version 01.00
 */
@SuppressWarnings("deprecation")
public class ReopenTest extends AbstractTest {

	private Reopen reopen;
	private MultiSearcher multiSearcher;

	@Before
	public void before() {
		reopen = new Reopen();
		Mockito.when(indexContext.isDelta()).thenReturn(Boolean.TRUE);
		Mockito.doAnswer(new Answer<Void>() {
			@Override
			public Void answer(final InvocationOnMock invocation) throws Throwable {
				multiSearcher = (MultiSearcher) invocation.getArguments()[0];
				return null;
			}
		}).when(indexContext).setMultiSearcher(Mockito.any(MultiSearcher.class));
	}

	@After
	public void after() throws Exception {
		FileUtilities.deleteFile(new File(indexContext.getIndexDirectoryPath()), 1);
	}

	@Test
	@SuppressWarnings("unused")
	public void internalExecute() throws Exception {
		File indexDirectory = createIndexFileSystem(indexContext, "Hello world");

		Mockito.when(indexContext.getMultiSearcher()).thenReturn(multiSearcher);
		boolean opened = reopen.internalExecute(indexContext);
		assertTrue("The index should be reopen on several indexes : ", opened);

		Mockito.when(indexContext.getMultiSearcher()).thenReturn(multiSearcher);
		IndexWriter[] indexWriters = IndexManager.openIndexWriterDelta(indexContext);
		addDocuments(indexWriters[0], IConstants.CONTENTS, "Michael Couck");
		int docs = reopen.numDocs(multiSearcher);

		opened = reopen.internalExecute(indexContext);
		assertTrue("The index should be reopen on several indexes : ", opened);
		int moreDocs = reopen.numDocs(multiSearcher);

		logger.info("Docs : " + docs + ", " + moreDocs);
		assertNotSame("There should be more documents in the new multi searcher : ", docs, moreDocs);
	}

}