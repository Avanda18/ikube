package ikube.action;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.mockito.Matchers.anyString;
import static org.mockito.Mockito.when;
import ikube.toolkit.FileUtilities;

import java.io.File;

import org.junit.Test;

/**
 * @author Michael Couck
 * @since 21.11.10
 * @version 01.00
 */
public class OpenTest extends BaseActionTest {

	private Open open = new Open();

	@Test
	public void execute() throws Exception {
		boolean opened = open.execute(indexContext);
		assertFalse(opened);

		String indexDirectoryPath = getServerIndexDirectoryPath(indexContext);

		indexContext.setMultiSearcher(MULTI_SEARCHER);
		when(INDEX_SEARCHER.getIndexReader()).thenReturn(INDEX_READER);
		when(INDEX_READER.directory()).thenReturn(FS_DIRECTORY);
		when(LOCK.isLocked()).thenReturn(Boolean.FALSE);
		when(FS_DIRECTORY.getFile()).thenReturn(new File(indexDirectoryPath));
		when(FS_DIRECTORY.makeLock(anyString())).thenReturn(LOCK);
		when(MULTI_SEARCHER.getSearchables()).thenReturn(SEARCHABLES);

		opened = open.execute(indexContext);
		assertFalse(opened);

		File anotherIndexDirectory = new File(indexDirectoryPath.replace(IP, "127.0.0.2"));
		createIndex(anotherIndexDirectory);

		indexContext.setMultiSearcher(null);
		opened = open.execute(indexContext);
		assertTrue(opened);
		indexContext.getMultiSearcher().close();

		FileUtilities.deleteFile(anotherIndexDirectory, 1);
		FileUtilities.deleteFile(new File(indexContext.getIndexDirectoryPath()), 1);
	}

}
